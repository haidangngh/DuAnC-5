// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using abcd.Models;

#nullable disable

namespace abcd.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240606094505_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Assignment_PH35423.Models.Table.Bill", b =>
                {
                    b.Property<Guid>("IdBill")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdCustomer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdVouncher")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Money")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("VounchersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdBill");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("VounchersId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Assignment_PH35423.Models.Table.BillDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdBill")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdProduct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdBill");

                    b.HasIndex("IdProduct");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("Assignment_PH35423.Models.Table.Cart_Detail", b =>
                {
                    b.Property<Guid>("IdCart_Detail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCart")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdProduct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("IdCart_Detail");

                    b.HasIndex("IdCart");

                    b.HasIndex("IdProduct");

                    b.ToTable("Cart_Detail");
                });

            modelBuilder.Entity("Assignment_PH35423.Models.Table.Carts", b =>
                {
                    b.Property<Guid>("IdCart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCustomers")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdCart");

                    b.HasIndex("IdCustomers")
                        .IsUnique();

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Assignment_PH35423.Models.Table.Categories", b =>
                {
                    b.Property<Guid>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategory");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Assignment_PH35423.Models.Table.Customers", b =>
                {
                    b.Property<Guid>("IdCustomers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<bool>("Sex")
                        .HasColumnType("bit");

                    b.HasKey("IdCustomers");

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Assignment_PH35423.Models.Table.Products", b =>
                {
                    b.Property<Guid>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CameraID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DisplayID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IMEI")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("IdBrand")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCategory")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid?>("ProductsCamerasCameraID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductsDisplaysDisplayID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<Guid?>("productsbrandsIdBrand")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdProduct");

                    b.HasIndex("IMEI")
                        .IsUnique();

                    b.HasIndex("IdCategory");

                    b.HasIndex("ProductsCamerasCameraID");

                    b.HasIndex("ProductsDisplaysDisplayID");

                    b.HasIndex("productsbrandsIdBrand");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Assignment_PH35423.Models.Table.Vounchers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdVouncher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quanlity")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("vounchers");
                });

            modelBuilder.Entity("PH33706database.Models.Table.ProductsBrand", b =>
                {
                    b.Property<Guid>("IdBrand")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrandDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandProductsQuanlity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBrand");

                    b.ToTable("productsBrands");
                });

            modelBuilder.Entity("PH33706database.Models.Table.ProductsCamera", b =>
                {
                    b.Property<Guid>("CameraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CameraCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CameraSpecialFeature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CameraStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CameraID");

                    b.ToTable("productsCameras");
                });

            modelBuilder.Entity("PH33706database.Models.Table.ProductsDisplay", b =>
                {
                    b.Property<Guid>("DisplayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("DisplayBrightness")
                        .HasColumnType("real");

                    b.Property<string>("DisplayCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("DisplayPrice")
                        .HasColumnType("real");

                    b.Property<float>("DisplaySize")
                        .HasColumnType("real");

                    b.HasKey("DisplayID");

                    b.ToTable("productsDisplays");
                });

            modelBuilder.Entity("Assignment_PH35423.Models.Table.Bill", b =>
                {
                    b.HasOne("Assignment_PH35423.Models.Table.Customers", "Customer")
                        .WithMany()
                        .HasForeignKey("IdCustomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_PH35423.Models.Table.Vounchers", null)
                        .WithMany("Bill")
                        .HasForeignKey("VounchersId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Assignment_PH35423.Models.Table.BillDetails", b =>
                {
                    b.HasOne("Assignment_PH35423.Models.Table.Bill", "Bill")
                        .WithMany("BillDetails")
                        .HasForeignKey("IdBill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_PH35423.Models.Table.Products", "Product")
                        .WithMany()
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Assignment_PH35423.Models.Table.Cart_Detail", b =>
                {
                    b.HasOne("Assignment_PH35423.Models.Table.Carts", "Cart")
                        .WithMany("Cart_Detail")
                        .HasForeignKey("IdCart")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_PH35423.Models.Table.Products", "Products")
                        .WithMany()
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Assignment_PH35423.Models.Table.Carts", b =>
                {
                    b.HasOne("Assignment_PH35423.Models.Table.Customers", "Customer")
                        .WithOne("Cart")
                        .HasForeignKey("Assignment_PH35423.Models.Table.Carts", "IdCustomers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Assignment_PH35423.Models.Table.Products", b =>
                {
                    b.HasOne("Assignment_PH35423.Models.Table.Categories", "Category")
                        .WithMany("Products")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PH33706database.Models.Table.ProductsCamera", "ProductsCameras")
                        .WithMany("Products")
                        .HasForeignKey("ProductsCamerasCameraID");

                    b.HasOne("PH33706database.Models.Table.ProductsDisplay", "ProductsDisplays")
                        .WithMany("Products")
                        .HasForeignKey("ProductsDisplaysDisplayID");

                    b.HasOne("PH33706database.Models.Table.ProductsBrand", "productsbrands")
                        .WithMany("Products")
                        .HasForeignKey("productsbrandsIdBrand");

                    b.Navigation("Category");

                    b.Navigation("ProductsCameras");

                    b.Navigation("ProductsDisplays");

                    b.Navigation("productsbrands");
                });

            modelBuilder.Entity("Assignment_PH35423.Models.Table.Bill", b =>
                {
                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("Assignment_PH35423.Models.Table.Carts", b =>
                {
                    b.Navigation("Cart_Detail");
                });

            modelBuilder.Entity("Assignment_PH35423.Models.Table.Categories", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Assignment_PH35423.Models.Table.Customers", b =>
                {
                    b.Navigation("Cart");
                });

            modelBuilder.Entity("Assignment_PH35423.Models.Table.Vounchers", b =>
                {
                    b.Navigation("Bill");
                });

            modelBuilder.Entity("PH33706database.Models.Table.ProductsBrand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PH33706database.Models.Table.ProductsCamera", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PH33706database.Models.Table.ProductsDisplay", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
